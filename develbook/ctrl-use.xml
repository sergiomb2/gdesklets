<section id="ctrl-use" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Using Controls</title>


<section><title>Calling by Interface</title>

  <para>When calling a control, <application>gDesklets</application> expects
    an interface identifier. It is up to <application>gDesklets</application>
    to pick a fitting control for you. But since you're interested in the
    functionality, not in the particular implementation, you don't have to
    worry about what you will get.</para>

  <para>For example, to call a control which implements the
    <literal>Time</literal> interface, you can write:</para>

  <programlisting><![CDATA[
<control id="myctrl" interface="ITime:9y703dqtfnv4w373caserz68r"/>
  ]]></programlisting>

  <para>The <property>id</property> attribute specifies the ID under which you
    later want to access the control in your applet. Controls are not display
    elements, thus this ID will not be put into the
    <link linkend="script-using-dsp"><literal>Dsp</literal> namespace</link>,
    but is directly accessible.</para>

</section>


<section><title>Properties</title>

  <para>Controls are property-based. There are properties where you can read
    from, and properties where you can write to. You can use the
    <application>gdesklets shell</application> command to look up the available
    properties of a control and their descriptions.</para>

  <para>By setting properties, you can e.g. change the state of a control.
    Controls can thus be seen as state-machines. Here is an example of using
    properties:</para>

  <programlisting><![CDATA[
<display>

  <control id="mytime" interface="ITime:9y703dqtfnv4w373caserz68r"/>

  <label id="lbl1"/>
  <label id="lbl2" relative-to="lbl1, y"/>

  <script>
    mytime.timezone = "Europe/Berlin"
    Dsp.lbl1.value = "Berlin: " + str(mytime.time)

    mytime.timezone = "Asia/Shanghai"
    Dsp.lbl2.value = "Shanghai: " + str(mytime.time)
  </script>

</display>

  ]]></programlisting>

  <para>State changes are not permanent and only last until you reload or close
    the applet. See <link linkend="prefs" endterm="prefs-title"/> for how to
    save the state of a control across sessions.</para>

</section>


<section id="ctrl-use-watch"><title>Watching Properties</title>

  <para>The values of properties can change from time to time. For instance,
    the <property>time</property> property of the <literal>Time</literal>
    control changes its value once a second to reflect the current time.</para>

  <para>It would be tedious and resource-consuming to write a loop for polling
    the properties at regular intervals. Controls can notify you about property
    changes, so that you just have to bind an action handler to the property
    itself.</para>

  <para>Every control provides the <property>bind(property, handler)</property>
    method, with which you can bind action handlers to properties.
    The handler will always be called automatically every time the property's
    value changes. That way you can watch the properties in which you are
    interested in. Not all properties support this, though. For some properties
    it does not make any sense to be watchable.</para>

  <programlisting><![CDATA[
...

def date_change_handler(new_value):

   print "The date has changed to %d/%d/%d." % new_value


time.bind("date", date_change_handler)

...
  ]]></programlisting>

  <para>Your handler function takes one argument which is the new value of the
    property that is being watched.</para>

</section>


<section id="ctrl-use-multiple"><title>Using Multiple Controls</title>

  <para>Since controls can be considered state machines, sometimes it's useful
    to support multiple instances of a control in a desklet. This can be done
    by instantiating the control with the <property>length</property> property
    explicitly set. With this set at load-time, the control will only be
    accessible like a list and will be expandable with the 
    <property>length</property> property. If you do not, the control may not
    necessarily provide the <property>length</property> property, will be
    accessible as shown above, and will not be expandable. In other words,
    existing desklets will continue to work as they are.</para>

  <programlisting><![CDATA[
...
<control id="myctrl" interface="ITime:9y703dqtfnv4w373caserz68r" length="1"/>

<script>
  Dsp.lbl1.value = str(myctrl[0].time)
</script>
...
  ]]></programlisting>

  <para>For compatibility with this feature, you should not implement a
    <property>length</property> property in your control.</para> 

</section>


</section>
